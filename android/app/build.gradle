def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
// START: FlutterFire Configuration
apply plugin: 'com.google.gms.google-services'
// END: FlutterFire Configuration
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"


// Load signing configs
// ToDo a nicer version where we identify if we are in debug or relase and do not use duplicate variable would be nicer
// load all debug configuration
def keystorePropertiesFileDebug = rootProject.file('../../config-files/flutter_app/android/signing/debug/key.properties')
println  "  keystorePropertiesFileDebug:   ${keystorePropertiesFileDebug}";
def keystoreDebug = rootProject.file('../../config-files/flutter_app/android/signing/debug/debug-keystore.jks')
println  "  keystoreDebug:   ${keystoreDebug}";
def keystorePropertiesDebug = new Properties()
keystorePropertiesDebug.load(new FileInputStream(keystorePropertiesFileDebug))

// load all release configuration
def keystorePropertiesFileRelease = rootProject.file('../../config-files/flutter_app/android/signing/release/key.properties')
println  "  keystorePropertiesFileRelease:   ${keystorePropertiesFileRelease}";
def keystoreRelease = rootProject.file('../../config-files/flutter_app/android/signing/release/upload-keystore.jks')
println  "  keystoreRelease:   ${keystoreRelease}";
def keystorePropertiesRelease = new Properties()
keystorePropertiesRelease.load(new FileInputStream(keystorePropertiesFileRelease))



android {
    compileSdkVersion 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "app.fingerfunke.fingerfunke"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName

        // Access environment variables
        resValue "string", "googleMapsApiKey", GOOGLE_MAPS_API_KEY
    }

    signingConfigs {
        debug{
            keyAlias keystorePropertiesDebug['keyAlias']
            keyPassword keystorePropertiesDebug['keyPassword']
            storeFile keystoreDebug
            storePassword keystorePropertiesDebug['storePassword']
        }
       release {
            keyAlias keystorePropertiesRelease['keyAlias']
            keyPassword keystorePropertiesRelease['keyPassword']
            storeFile keystoreRelease
            storePassword keystorePropertiesRelease['storePassword']
        }
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
